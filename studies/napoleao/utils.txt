powershell

Invoke-WebRequest -Uri "http://localhost:8080/produtos" -Method GET


Invoke-WebRequest -Uri "http://localhost:8080/produtos" `
    -Method POST `
    -Headers @{"Content-Type"="application/json"} `
    -Body '{"nome":"Produto Teste", "preco":10.00, "quantidade":5}'


Invoke-WebRequest -Uri "http://localhost:8080/produtos/1" -Method DELETE

Invoke-RestMethod -Method PATCH -Uri "http://localhost:8080/produtos/1/update" -Body '{"novoPreco": 15.00}' -ContentType "application/json"

Invoke-RestMethod -Method PATCH -Uri "http://localhost:8080/categorias/1/update" -Body '{"novoNome": "Nova Categoria"}' -ContentType "application/json"


terminal linux

curl -X GET http://localhost:8080/produtos


curl -X POST http://localhost:8080/produtos \
     -H "Content-Type: application/json" \
     -d '{"nome":"Produto Teste", "preco": 10.00, "quantidade": 5}'


curl -X DELETE http://localhost:8080/produtos/1






        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-validation</artifactId>
        </dependency>




        spring.datasource.url=jdbc:h2:mem:testdb
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=12345678
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.jpa.show-sql=true
# http://localhost:8080/h2-console/

# Configuração para carregar o arquivo data.sql automaticamente
spring.sql.init.mode=always
spring.jpa.defer-datasource-initialization=true


spring.jpa.hibernate.ddl-auto=create

logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
